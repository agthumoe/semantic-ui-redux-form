{"version":3,"sources":["../../src/components/DropdownField.jsx"],"names":["renderField","fields","id","label","placeholder","loading","disabled","readOnly","className","fluid","icon","search","size","handleOnSearch","handleOnChange","input","multiple","data","meta","touched","error","undefined","name","event","d","onChange","value","target","DropdownField","validate","isRequired","onSearch","onAddNew","newValidator","slice","push","required","propTypes","PropTypes","string","arrayOf","shape","key","oneOfType","number","text","object","bool","element","func","oneOf","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAAA,MAE5BC,EAF4B,GAmB1BD,MAnB0B,CAE5BC,EAF4B;AAAA,MAG5BC,KAH4B,GAmB1BF,MAnB0B,CAG5BE,KAH4B;AAAA,MAI5BC,WAJ4B,GAmB1BH,MAnB0B,CAI5BG,WAJ4B;AAAA,MAK5BC,OAL4B,GAmB1BJ,MAnB0B,CAK5BI,OAL4B;AAAA,MAM5BC,QAN4B,GAmB1BL,MAnB0B,CAM5BK,QAN4B;AAAA,MAO5BC,QAP4B,GAmB1BN,MAnB0B,CAO5BM,QAP4B;AAAA,MAQ5BC,SAR4B,GAmB1BP,MAnB0B,CAQ5BO,SAR4B;AAAA,MAS5BC,KAT4B,GAmB1BR,MAnB0B,CAS5BQ,KAT4B;AAAA,MAU5BC,IAV4B,GAmB1BT,MAnB0B,CAU5BS,IAV4B;AAAA,MAW5BC,MAX4B,GAmB1BV,MAnB0B,CAW5BU,MAX4B;AAAA,MAY5BC,IAZ4B,GAmB1BX,MAnB0B,CAY5BW,IAZ4B;AAAA,MAa5BC,cAb4B,GAmB1BZ,MAnB0B,CAa5BY,cAb4B;AAAA,MAc5BC,cAd4B,GAmB1Bb,MAnB0B,CAc5Ba,cAd4B;AAAA,MAe5BC,KAf4B,GAmB1Bd,MAnB0B,CAe5Bc,KAf4B;AAAA,MAgB5BC,QAhB4B,GAmB1Bf,MAnB0B,CAgB5Be,QAhB4B;AAAA,MAiB5BC,IAjB4B,GAmB1BhB,MAnB0B,CAiB5BgB,IAjB4B;AAAA,qBAmB1BhB,MAnB0B,CAkB5BiB,IAlB4B;AAAA,MAkBpBC,OAlBoB,gBAkBpBA,OAlBoB;AAAA,MAkBXC,KAlBW,gBAkBXA,KAlBW;AAqB9B,SACE,gCAAC,qBAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAEZ,SAAvB;AAAkC,IAAA,KAAK,EAAEW,OAAO,IAAIC,KAAX,IAAoB;AAA7D,KACGjB,KAAK,IACJ;AAAO,IAAA,OAAO,EAAED;AAAhB,KACGC,KADH,EAEE,+CAAQgB,OAAO,IAAIC,KAAX,iBAA0BA,KAA1B,UAAsCC,SAA9C,CAFF,CAFJ,EAOE,gCAAC,yBAAD;AACE,IAAA,QAAQ,EAAEf,QADZ;AAEE,IAAA,KAAK,EAAEG,KAFT;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,EAAE,EAAER,EAJN;AAKE,IAAA,IAAI,EAAEa,KAAK,CAACO,IALd;AAME,IAAA,OAAO,EAAEjB,OANX;AAOE,IAAA,QAAQ,EAAEW,QAPZ;AAQE,IAAA,QAAQ,EAAE,kBAACO,KAAD,EAAQC,CAAR,EAAc;AACtB,UAAI,OAAOV,cAAP,KAA0B,UAA9B,EAA0C;AACxCA,QAAAA,cAAc,CAACS,KAAD,EAAQC,CAAR,CAAd;AACD;;AACD,UAAIR,QAAJ,EAAc;AACZD,QAAAA,KAAK,CAACU,QAAN,oBAAmBD,CAAC,CAACE,KAArB;AACD,OAFD,MAEO;AACLX,QAAAA,KAAK,CAACU,QAAN,CAAeD,CAAC,CAACE,KAAjB;AACD;AACF,KAjBH;AAkBE,IAAA,cAAc,EAAE,wBAACH,KAAD,EAAW;AACzB,UAAI,OAAOV,cAAP,KAA0B,UAA9B,EAA0C;AACxCA,QAAAA,cAAc,CAACU,KAAK,CAACI,MAAN,CAAaD,KAAd,CAAd;AACD;AACF,KAtBH;AAuBE,IAAA,OAAO,EAAET,IAvBX;AAwBE,IAAA,WAAW,EAAEb,WAxBf;AAyBE,IAAA,QAAQ,EAAEG,QAzBZ;AA0BE,IAAA,MAAM,EAAEI,MAAM,IAAI,OAAOE,cAAP,KAA0B,UA1B9C;AA2BE,IAAA,SAAS,MA3BX;AA4BE,IAAA,IAAI,EAAED,IA5BR;AA6BE,IAAA,KAAK,EAAEI,QAAQ,sBAAOD,KAAK,CAACW,KAAb,IAAsBX,KAAK,CAACW;AA7B7C,IAPF,CADF;AAyCD,CA9DD;;AAgEA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,OAoBhB;AAAA,MAnBJC,QAmBI,QAnBJA,QAmBI;AAAA,MAlBJ3B,EAkBI,QAlBJA,EAkBI;AAAA,MAjBJoB,IAiBI,QAjBJA,IAiBI;AAAA,MAhBJnB,KAgBI,QAhBJA,KAgBI;AAAA,MAfJC,WAeI,QAfJA,WAeI;AAAA,MAdJ0B,UAcI,QAdJA,UAcI;AAAA,MAbJzB,OAaI,QAbJA,OAaI;AAAA,MAZJC,QAYI,QAZJA,QAYI;AAAA,MAXJC,QAWI,QAXJA,QAWI;AAAA,MAVJC,SAUI,QAVJA,SAUI;AAAA,MATJC,KASI,QATJA,KASI;AAAA,MARJC,IAQI,QARJA,IAQI;AAAA,MAPJE,IAOI,QAPJA,IAOI;AAAA,MANJD,MAMI,QANJA,MAMI;AAAA,MALJM,IAKI,QALJA,IAKI;AAAA,MAJJc,QAII,QAJJA,QAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJhB,QAEI,QAFJA,QAEI;AAAA,MADJS,QACI,QADJA,QACI;AACJ,MAAMQ,YAAY,GAAGJ,QAAQ,CAACK,KAAT,EAArB;;AACA,MAAIJ,UAAJ,EAAgB;AACdG,IAAAA,YAAY,CAACE,IAAb,CAAkBC,oBAAlB;AACD;;AAED,SACE,gCAAC,gBAAD;AACE,IAAA,SAAS,EAAE5B,SADb;AAEE,IAAA,SAAS,EAAER,WAFb;AAGE,IAAA,IAAI,EAAEiB,IAHR;AAIE,IAAA,QAAQ,EAAEX,QAJZ;AAKE,IAAA,KAAK,EAAEG,KALT;AAME,IAAA,cAAc,EAAEuB,QANlB;AAOE,IAAA,cAAc,EAAEP,QAPlB;AAQE,IAAA,cAAc,EAAEM,QARlB;AASE,IAAA,IAAI,EAAErB,IATR;AAUE,IAAA,EAAE,EAAER,EAVN;AAWE,IAAA,KAAK,EAAEC,KAXT;AAYE,IAAA,OAAO,EAAEE,OAZX;AAaE,IAAA,QAAQ,EAAEW,QAbZ;AAcE,IAAA,IAAI,EAAEM,IAdR;AAeE,IAAA,WAAW,EAAElB,WAff;AAgBE,IAAA,QAAQ,EAAEG,QAhBZ;AAiBE,IAAA,MAAM,EAAEI,MAjBV;AAkBE,IAAA,IAAI,EAAEC,IAlBR;AAmBE,IAAA,QAAQ,EAAEqB;AAnBZ,IADF;AAuBD,CAjDD;;AAmDAL,aAAa,CAACS,SAAd,GAA0B;AACxB7B,EAAAA,SAAS,EAAE8B,sBAAUC,MADG;AAExBtB,EAAAA,IAAI,EAAEqB,sBAAUE,OAAV,CAAkBF,sBAAUG,KAAV,CAAgB;AACtCC,IAAAA,GAAG,EAAEJ,sBAAUK,SAAV,CAAoBL,sBAAUC,MAA9B,EAAsCD,sBAAUM,MAAhD,EAAwDd,UADvB;AAEtCe,IAAAA,IAAI,EAAEP,sBAAUK,SAAV,CAAoBL,sBAAUC,MAA9B,EAAsCD,sBAAUM,MAAhD,EAAwDd,UAFxB;AAGtCJ,IAAAA,KAAK,EAAEY,sBAAUK,SAAV,CAAoB,CACzBL,sBAAUC,MADe,EAEzBD,sBAAUM,MAFe,EAGzBN,sBAAUQ,MAHe,EAIzBR,sBAAUS,IAJe,CAApB,EAKJjB;AARmC,GAAhB,CAAlB,CAFkB;AAYxBxB,EAAAA,QAAQ,EAAEgC,sBAAUS,IAZI;AAaxBtC,EAAAA,KAAK,EAAE6B,sBAAUS,IAbO;AAcxBrC,EAAAA,IAAI,EAAE4B,sBAAUC,MAdQ;AAexBrC,EAAAA,EAAE,EAAEoC,sBAAUC,MAAV,CAAiBT,UAfG;AAgBxBA,EAAAA,UAAU,EAAEQ,sBAAUS,IAhBE;AAiBxB5C,EAAAA,KAAK,EAAEmC,sBAAUK,SAAV,CAAoB,CAACL,sBAAUC,MAAX,EAAmBD,sBAAUU,OAA7B,CAApB,CAjBiB;AAkBxB3C,EAAAA,OAAO,EAAEiC,sBAAUS,IAlBK;AAmBxB/B,EAAAA,QAAQ,EAAEsB,sBAAUS,IAnBI;AAoBxBzB,EAAAA,IAAI,EAAEgB,sBAAUC,MAAV,CAAiBT,UApBC;AAqBxBE,EAAAA,QAAQ,EAAEM,sBAAUW,IArBI;AAsBxBxB,EAAAA,QAAQ,EAAEa,sBAAUW,IAtBI;AAuBxBlB,EAAAA,QAAQ,EAAEO,sBAAUW,IAvBI;AAwBxB7C,EAAAA,WAAW,EAAEkC,sBAAUC,MAxBC;AAyBxBhC,EAAAA,QAAQ,EAAE+B,sBAAUS,IAzBI;AA0BxBpC,EAAAA,MAAM,EAAE2B,sBAAUS,IA1BM;AA2BxBnC,EAAAA,IAAI,EAAE0B,sBAAUY,KAAV,CAAgB,CACpB,MADoB,EAEpB,OAFoB,EAGpB,OAHoB,EAIpB,KAJoB,EAKpB,MALoB,EAMpB,SANoB,EAOpB,QAPoB,CAAhB,CA3BkB;AAoCxBrB,EAAAA,QAAQ,EAAES,sBAAUE,OAAV,CAAkBF,sBAAUW,IAA5B;AApCc,CAA1B;AAuCArB,aAAa,CAACuB,YAAd,GAA6B;AAC3BtB,EAAAA,QAAQ,EAAE,EADiB;AAE3B1B,EAAAA,KAAK,EAAE,EAFoB;AAG3BI,EAAAA,QAAQ,EAAE,KAHiB;AAI3BI,EAAAA,MAAM,EAAE,KAJmB;AAK3BH,EAAAA,SAAS,EAAE,EALgB;AAM3BS,EAAAA,IAAI,EAAE,EANqB;AAO3BR,EAAAA,KAAK,EAAE,KAPoB;AAQ3BC,EAAAA,IAAI,EAAE,UARqB;AAS3BL,EAAAA,OAAO,EAAE,KATkB;AAU3BO,EAAAA,IAAI,EAAE,QAVqB;AAW3BN,EAAAA,QAAQ,EAAE,KAXiB;AAY3BwB,EAAAA,UAAU,EAAE,KAZe;AAa3Bd,EAAAA,QAAQ,EAAE,KAbiB;AAc3BS,EAAAA,QAAQ,EAAE,IAdiB;AAe3BM,EAAAA,QAAQ,EAAE,IAfiB;AAgB3BC,EAAAA,QAAQ,EAAE,IAhBiB;AAiB3B5B,EAAAA,WAAW,EAAE;AAjBc,CAA7B;eAoBewB,a","sourcesContent":["import React from 'react';\nimport { Dropdown, Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'redux-form';\nimport { required } from './validation';\n\nconst renderField = (fields) => {\n  const {\n    id,\n    label,\n    placeholder,\n    loading,\n    disabled,\n    readOnly,\n    className,\n    fluid,\n    icon,\n    search,\n    size,\n    handleOnSearch,\n    handleOnChange,\n    input,\n    multiple,\n    data,\n    meta: { touched, error },\n  } = fields;\n\n  return (\n    <Form.Field className={className} error={touched && error && true}>\n      {label && (\n        <label htmlFor={id}>\n          {label}\n          <small>{touched && error ? `* ( ${error} )` : undefined}</small>\n        </label>\n      )}\n      <Dropdown\n        disabled={disabled}\n        fluid={fluid}\n        icon={icon}\n        id={id}\n        name={input.name}\n        loading={loading}\n        multiple={multiple}\n        onChange={(event, d) => {\n          if (typeof handleOnChange === 'function') {\n            handleOnChange(event, d);\n          }\n          if (multiple) {\n            input.onChange([...d.value]);\n          } else {\n            input.onChange(d.value);\n          }\n        }}\n        onSearchChange={(event) => {\n          if (typeof handleOnSearch === 'function') {\n            handleOnSearch(event.target.value);\n          }\n        }}\n        options={data}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        search={search || typeof handleOnSearch === 'function'}\n        selection\n        size={size}\n        value={multiple ? [...input.value] : input.value}\n      />\n    </Form.Field>\n  );\n};\n\nconst DropdownField = ({\n  validate,\n  id,\n  name,\n  label,\n  placeholder,\n  isRequired,\n  loading,\n  disabled,\n  readOnly,\n  className,\n  fluid,\n  icon,\n  size,\n  search,\n  data,\n  onSearch,\n  onAddNew,\n  multiple,\n  onChange,\n}) => {\n  const newValidator = validate.slice();\n  if (isRequired) {\n    newValidator.push(required);\n  }\n\n  return (\n    <Field\n      className={className}\n      component={renderField}\n      data={data}\n      disabled={disabled}\n      fluid={fluid}\n      handleOnAddNew={onAddNew}\n      handleOnChange={onChange}\n      handleOnSearch={onSearch}\n      icon={icon}\n      id={id}\n      label={label}\n      loading={loading}\n      multiple={multiple}\n      name={name}\n      placeholder={placeholder}\n      readOnly={readOnly}\n      search={search}\n      size={size}\n      validate={newValidator}\n    />\n  );\n};\n\nDropdownField.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.oneOfType(PropTypes.string, PropTypes.number).isRequired,\n    text: PropTypes.oneOfType(PropTypes.string, PropTypes.number).isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.bool,\n    ]).isRequired,\n  })),\n  disabled: PropTypes.bool,\n  fluid: PropTypes.bool,\n  icon: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  loading: PropTypes.bool,\n  multiple: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  onAddNew: PropTypes.func,\n  onChange: PropTypes.func,\n  onSearch: PropTypes.func,\n  placeholder: PropTypes.string,\n  readOnly: PropTypes.bool,\n  search: PropTypes.bool,\n  size: PropTypes.oneOf([\n    'mini',\n    'small',\n    'large',\n    'big',\n    'huge',\n    'massive',\n    'normal',\n  ]),\n  validate: PropTypes.arrayOf(PropTypes.func),\n};\n\nDropdownField.defaultProps = {\n  validate: [],\n  label: '',\n  readOnly: false,\n  search: false,\n  className: '',\n  data: [],\n  fluid: false,\n  icon: 'dropdown',\n  loading: false,\n  size: 'normal',\n  disabled: false,\n  isRequired: false,\n  multiple: false,\n  onChange: null,\n  onSearch: null,\n  onAddNew: null,\n  placeholder: '',\n};\n\nexport default DropdownField;\n"],"file":"DropdownField.js"}