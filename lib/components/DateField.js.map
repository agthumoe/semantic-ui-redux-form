{"version":3,"sources":["../../src/components/DateField.jsx"],"names":["renderField","fields","id","label","className","meta","touched","error","input","handleOnChange","dateFormat","rest","undefined","event","data","normalised","value","onChange","moment","isMoment","format","DateField","isRequired","validate","newValidator","slice","push","required","propTypes","PropTypes","string","disabled","bool","fluid","icon","oneOfType","element","name","func","placeholder","popupPosition","oneOf","readOnly","size","arrayOf","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { Field as ReduxField } from 'redux-form';\nimport { Form } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { required } from './validation';\n\nconst renderField = (fields) => {\n  const {\n    id,\n    label,\n    className,\n    meta: { touched, error },\n    input,\n    handleOnChange,\n    dateFormat,\n    ...rest\n  } = fields;\n  return (\n    <Form.Field className={className}>\n      {label && (\n        <label htmlFor={id}>\n          {label}\n          <small>{touched && error ? `* ( ${error} )` : undefined}</small>\n        </label>\n      )}\n      <DateInput\n        {...rest}\n        {...input}\n        dateFormat={dateFormat}\n        id={id}\n        animation=\"fade\"\n        onChange={(event, data) => {\n          const normalised = moment(data.value, dateFormat);\n          if (typeof handleOnChange === 'function') {\n            handleOnChange(event, normalised);\n          }\n          input.onChange(normalised);\n        }}\n        value={moment.isMoment(input.value) ? input.value.format(dateFormat) : input.value}\n      />\n    </Form.Field>\n  );\n};\n\nconst DateField = ({\n  isRequired, validate, onChange, ...rest\n}) => {\n  const newValidator = validate.slice();\n  if (isRequired) {\n    newValidator.push(required);\n  }\n  return (\n    <ReduxField\n      {...rest}\n      component={renderField}\n      handleOnChange={onChange}\n      validate={newValidator}\n    />\n  );\n};\n\nDateField.propTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  fluid: PropTypes.bool,\n  icon: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  dateFormat: PropTypes.string,\n  popupPosition: PropTypes.oneOf([\n    'top left',\n    'top right',\n    'bottom left',\n    'bottom right',\n    'right center',\n    'left center',\n    'top center',\n    'bottom center',\n  ]),\n  readOnly: PropTypes.bool,\n  size: PropTypes.oneOf([\n    'mini',\n    'small',\n    'large',\n    'big',\n    'huge',\n    'massive',\n    'normal',\n  ]),\n  validate: PropTypes.arrayOf(PropTypes.func),\n};\n\nDateField.defaultProps = {\n  validate: [],\n  label: '',\n  className: '',\n  disabled: false,\n  isRequired: false,\n  readOnly: false,\n  onChange: null,\n  placeholder: '',\n  fluid: false,\n  icon: '',\n  size: null,\n  popupPosition: 'top left',\n  dateFormat: 'DD-MM-YYYY',\n};\n\nexport default DateField;\n"],"file":"DateField.js"}