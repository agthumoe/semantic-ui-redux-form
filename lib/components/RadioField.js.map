{"version":3,"sources":["../../src/components/RadioField.jsx"],"names":["renderField","fields","name","label","className","id","options","inline","onHandleChange","input","value","onChange","meta","touched","error","map","option","e","v","RadioField","validate","disabled","readOnly","isRequired","newValidator","slice","push","required","propTypes","PropTypes","string","arrayOf","func","oneOfType","element","bool","shape","number","object","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'redux-form';\nimport { required } from './validation';\n\nconst renderField = (fields) => {\n  const {\n    name,\n    label,\n    className,\n    id,\n    options,\n    inline,\n    onHandleChange,\n    input: { value, onChange },\n    meta: { touched, error },\n  } = fields;\n  return (\n    <Form.Field error={touched && error && true} className={className}>\n      {label && (\n        <label htmlFor={id} className={className}>\n          {label}\n        </label>\n      )}\n      <Form.Group inline={inline} grouped={!inline}>\n        {options.map((option) => (\n          <Form.Radio\n            label={option.label}\n            name={name}\n            value={option.value}\n            key={option.value}\n            checked={value === option.value}\n            onChange={(e, v) => {\n              if (typeof onHandleChange === 'function') {\n                onHandleChange(e, v);\n              }\n              onChange(v.value);\n            }}\n          />\n        ))}\n      </Form.Group>\n    </Form.Field>\n  );\n};\n\nconst RadioField = ({\n  validate,\n  disabled,\n  readOnly,\n  onChange,\n  isRequired,\n  inline,\n  label,\n  name,\n  id,\n  className,\n  options,\n}) => {\n  const newValidator = validate.slice();\n  if (isRequired) {\n    newValidator.push(required);\n  }\n  return (\n    <Field\n      component={renderField}\n      name={name}\n      id={id}\n      inline={inline}\n      label={label}\n      className={className}\n      validate={newValidator}\n      disabled={disabled}\n      readOnly={readOnly}\n      onHandleChange={onChange}\n      options={options}\n    />\n  );\n};\n\nRadioField.propTypes = {\n  className: PropTypes.string,\n  validate: PropTypes.arrayOf(PropTypes.func),\n  onChange: PropTypes.func,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  inline: PropTypes.bool,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.object,\n      ]).isRequired,\n    }),\n  ),\n};\n\nRadioField.defaultProps = {\n  className: '',\n  validate: [],\n  label: '',\n  isRequired: false,\n  disabled: false,\n  readOnly: false,\n  inline: true,\n  onChange: null,\n  options: [],\n};\n\nexport default RadioField;\n"],"file":"RadioField.js"}