{"version":3,"sources":["../../src/components/RadioField.jsx"],"names":["renderField","fields","name","label","className","id","options","input","value","onChange","rest","meta","touched","error","RadioField","validate","disabled","readOnly","isRequired","newValidator","slice","push","required","propTypes","PropTypes","arrayOf","func","oneOfType","string","element","bool","shape","number","object","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAAA,MAE5BC,IAF4B,GAS1BD,MAT0B,CAE5BC,IAF4B;AAAA,MAG5BC,KAH4B,GAS1BF,MAT0B,CAG5BE,KAH4B;AAAA,MAI5BC,SAJ4B,GAS1BH,MAT0B,CAI5BG,SAJ4B;AAAA,MAK5BC,EAL4B,GAS1BJ,MAT0B,CAK5BI,EAL4B;AAAA,MAM5BC,OAN4B,GAS1BL,MAT0B,CAM5BK,OAN4B;AAAA,sBAS1BL,MAT0B,CAO5BM,KAP4B;AAAA,MAOnBC,KAPmB,iBAOnBA,KAPmB;AAAA,MAOZC,QAPY,iBAOZA,QAPY;AAAA,MAOCC,IAPD;AAAA,qBAS1BT,MAT0B,CAQ5BU,IAR4B;AAAA,MAQpBC,OARoB,gBAQpBA,OARoB;AAAA,MAQXC,KARW,gBAQXA,KARW;;AAU9B,SACE,gCAAC,qBAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAET,SAAvB;AAAkC,IAAA,KAAK,EAAEQ,OAAO,IAAIC,KAAX,IAAoB;AAA7D,KACE;AAAO,IAAA,SAAS,EAAET,SAAlB;AAA6B,IAAA,OAAO,EAAEC;AAAtC,KACGF,KADH,CADF,EAIE,gCAAC,mBAAD;AACE,IAAA,SAAS,EAAEC,SADb;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,IAAI,EAAED,IAHR;AAIE,IAAA,QAAQ,EAAEO,QAJZ;AAKE,IAAA,OAAO,EAAEH,OALX;AAME,IAAA,KAAK,EAAEE;AANT,KAOME,IAPN;AAQE,IAAA,EAAE,EAAEL;AARN,KAJF,CADF;AAiBD,CA3BD;;AA6BA,IAAMS,UAAU,GAAG,SAAbA,UAAa,OAWb;AAAA,MAVJC,QAUI,QAVJA,QAUI;AAAA,MATJC,QASI,QATJA,QASI;AAAA,MARJC,QAQI,QARJA,QAQI;AAAA,MAPJR,QAOI,QAPJA,QAOI;AAAA,MANJS,UAMI,QANJA,UAMI;AAAA,MALJf,KAKI,QALJA,KAKI;AAAA,MAJJD,IAII,QAJJA,IAII;AAAA,MAHJG,EAGI,QAHJA,EAGI;AAAA,MAFJD,SAEI,QAFJA,SAEI;AAAA,MADJE,OACI,QADJA,OACI;AACJ,MAAMa,YAAY,GAAGJ,QAAQ,CAACK,KAAT,EAArB;;AACA,MAAIF,UAAJ,EAAgB;AACdC,IAAAA,YAAY,CAACE,IAAb,CAAkBC,oBAAlB;AACD;;AACD,SACE,gCAAC,gBAAD;AACE,IAAA,SAAS,EAAElB,SADb;AAEE,IAAA,SAAS,EAAEJ,WAFb;AAGE,IAAA,QAAQ,EAAEgB,QAHZ;AAIE,IAAA,EAAE,EAAEX,EAJN;AAKE,IAAA,KAAK,EAAEF,KALT;AAME,IAAA,IAAI,EAAED,IANR;AAOE,IAAA,cAAc,EAAEO,QAPlB;AAQE,IAAA,OAAO,EAAEH,OARX;AASE,IAAA,QAAQ,EAAEW,QATZ;AAUE,IAAA,QAAQ,EAAEE;AAVZ,IADF;AAcD,CA9BD;;AAgCAL,UAAU,CAACS,SAAX,GAAuB;AACrBR,EAAAA,QAAQ,EAAES,sBAAUC,OAAV,CAAkBD,sBAAUE,IAA5B,CADW;AAErBjB,EAAAA,QAAQ,EAAEe,sBAAUE,IAFC;AAGrBvB,EAAAA,KAAK,EAAEqB,sBAAUG,SAAV,CAAoB,CAACH,sBAAUI,MAAX,EAAmBJ,sBAAUK,OAA7B,CAApB,CAHc;AAIrB3B,EAAAA,IAAI,EAAEsB,sBAAUI,MAAV,CAAiBV,UAJF;AAKrBb,EAAAA,EAAE,EAAEmB,sBAAUI,MAAV,CAAiBV,UALA;AAMrBA,EAAAA,UAAU,EAAEM,sBAAUM,IAND;AAOrBd,EAAAA,QAAQ,EAAEQ,sBAAUM,IAPC;AAQrBb,EAAAA,QAAQ,EAAEO,sBAAUM,IARC;AASrBxB,EAAAA,OAAO,EAAEkB,sBAAUC,OAAV,CACPD,sBAAUO,KAAV,CAAgB;AACd5B,IAAAA,KAAK,EAAEqB,sBAAUI,MAAV,CAAiBV,UADV;AAEdV,IAAAA,KAAK,EAAEgB,sBAAUG,SAAV,CAAoB,CACzBH,sBAAUI,MADe,EAEzBJ,sBAAUQ,MAFe,EAGzBR,sBAAUS,MAHe,CAApB,EAIJf;AANW,GAAhB,CADO;AATY,CAAvB;AAqBAJ,UAAU,CAACoB,YAAX,GAA0B;AACxBnB,EAAAA,QAAQ,EAAE,EADc;AAExBZ,EAAAA,KAAK,EAAE,EAFiB;AAGxBe,EAAAA,UAAU,EAAE,KAHY;AAIxBF,EAAAA,QAAQ,EAAE,KAJc;AAKxBC,EAAAA,QAAQ,EAAE,KALc;AAMxBR,EAAAA,QAAQ,EAAE,IANc;AAOxBH,EAAAA,OAAO,EAAE;AAPe,CAA1B;eAUeQ,U","sourcesContent":["import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'redux-form';\nimport Options from './Options';\nimport { required } from './validation';\n\nconst renderField = (fields) => {\n  const {\n    name,\n    label,\n    className,\n    id,\n    options,\n    input: { value, onChange, ...rest },\n    meta: { touched, error },\n  } = fields;\n  return (\n    <Form.Field className={className} error={touched && error && true}>\n      <label className={className} htmlFor={id}>\n        {label}\n      </label>\n      <Options\n        className={className}\n        label={label}\n        name={name}\n        onChange={onChange}\n        options={options}\n        value={value}\n        {...rest}\n        id={id}\n      />\n    </Form.Field>\n  );\n};\n\nconst RadioField = ({\n  validate,\n  disabled,\n  readOnly,\n  onChange,\n  isRequired,\n  label,\n  name,\n  id,\n  className,\n  options,\n}) => {\n  const newValidator = validate.slice();\n  if (isRequired) {\n    newValidator.push(required);\n  }\n  return (\n    <Field\n      className={className}\n      component={renderField}\n      disabled={disabled}\n      id={id}\n      label={label}\n      name={name}\n      onHandleChange={onChange}\n      options={options}\n      readOnly={readOnly}\n      validate={newValidator}\n    />\n  );\n};\n\nRadioField.propTypes = {\n  validate: PropTypes.arrayOf(PropTypes.func),\n  onChange: PropTypes.func,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.object,\n      ]).isRequired,\n    }),\n  ),\n};\n\nRadioField.defaultProps = {\n  validate: [],\n  label: '',\n  isRequired: false,\n  disabled: false,\n  readOnly: false,\n  onChange: null,\n  options: [],\n};\n\nexport default RadioField;\n"],"file":"RadioField.js"}