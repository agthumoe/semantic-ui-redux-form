{"version":3,"sources":["../../src/components/Field.jsx"],"names":["renderField","fields","id","label","className","icon","size","input","meta","touched","error","handleOnChange","rest","undefined","event","data","onChange","Field","type","isRequired","validate","newValidator","slice","push","required","number","email","propTypes","PropTypes","string","disabled","bool","fluid","oneOfType","element","loading","name","func","placeholder","readOnly","oneOf","arrayOf","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field as ReduxField } from 'redux-form';\nimport { Input, Form } from 'semantic-ui-react';\nimport { required, number, email } from './validation';\n\nconst renderField = (fields) => {\n  const {\n    id,\n    label,\n    className,\n    icon,\n    size,\n    input,\n    meta: { touched, error },\n    handleOnChange,\n    ...rest\n  } = fields;\n\n  return (\n    <Form.Field className={className} error={touched && error && true}>\n      {label && (\n        <label htmlFor={id}>\n          {label}\n          <small>{touched && error ? ` ( ${error} )` : undefined}</small>\n        </label>\n      )}\n      <Input\n        {...rest}\n        {...input}\n        icon={icon || undefined}\n        onChange={(event, data) => {\n          if (typeof handleOnChange === 'function') {\n            handleOnChange(event, data);\n          }\n          input.onChange(event);\n        }}\n        size={size || undefined}\n      />\n    </Form.Field>\n  );\n};\n\nconst Field = ({\n  type,\n  isRequired,\n  validate,\n  onChange,\n  ...rest\n}) => {\n  const newValidator = validate.slice();\n  if (isRequired) {\n    newValidator.push(required);\n  }\n  if (type === 'number') {\n    newValidator.push(number);\n  }\n  if (type === 'email') {\n    newValidator.push(email);\n  }\n  return (\n    <ReduxField\n      {...rest}\n      type={type}\n      component={renderField}\n      handleOnChange={onChange}\n      validate={newValidator}\n    />\n  );\n};\n\nField.propTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  fluid: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  id: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  loading: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  readOnly: PropTypes.bool,\n  size: PropTypes.oneOf([\n    'mini',\n    'small',\n    'large',\n    'big',\n    'huge',\n    'massive',\n    'normal',\n  ]),\n  type: PropTypes.oneOf(['number', 'text', 'password', 'email']),\n  validate: PropTypes.arrayOf(PropTypes.func),\n};\n\nField.defaultProps = {\n  validate: [],\n  label: '',\n  className: '',\n  type: 'text',\n  disabled: false,\n  isRequired: false,\n  readOnly: false,\n  onChange: null,\n  placeholder: '',\n  fluid: false,\n  icon: '',\n  size: null,\n  loading: false,\n};\n\nexport default Field;\n"],"file":"Field.js"}